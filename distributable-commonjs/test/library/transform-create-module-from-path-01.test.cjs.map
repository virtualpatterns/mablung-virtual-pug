{"version":3,"sources":["../../../source/test/library/transform-create-module-from-path-01.test.js"],"names":["Bundle","_Bundler","FilePath","__filename","FolderPath","Path","dirname","Require","require","test","sourcePath","targetPath","Transform","createModuleFromPath","relative","resolve","preIndexPath","postIndexPath","host","port","extname","Server","start","browser","Browser","launch","page","newPage","goto","element","$$","item","Promise","all","map","evaluate","node","dataset","deepEqual","close","shutdown"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AAEA,MAAM;AAAE,WAASA;AAAX,IAAsBC,gBAA5B;AACA,MAAMC,QAAQ,GATdC,UASA;;AACA,MAAMC,UAAU,GAAGC,cAAKC,OAAL,CAAaJ,QAAb,CAAnB;;AACA,MAAMK,OAAO,GAXbC,OAWA;AAEA,kBAAK,oEAAL,EAA2E,MAAOC,IAAP,IAAgB;AAEzF,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,UAAU,GAAG,IAAjB;AAEAD,EAAAA,UAAU,GAAI,GAAEN,UAAW,yBAA3B;AACAO,EAAAA,UAAU,GAAI,GAAEP,UAAW,wBAA3B;AAEA,QAAMQ,iBAAUC,oBAAV,CAA+BH,UAA/B,EAA2CC,UAA3C,EAAuD;AAAE,eAAWN,cAAKS,QAAL,CAAcT,cAAKC,OAAL,CAAaI,UAAb,CAAd,EAAwCH,OAAO,CAACQ,OAAR,CAAgB,2BAAhB,CAAxC;AAAb,GAAvD,CAAN;AAEA,MAAIC,YAAY,GAAI,GAAEZ,UAAW,0BAAjC;AACA,MAAIa,aAAa,GAAI,GAAEb,UAAW,2BAAlC;AAEA,QAAMJ,MAAM,CAAC;AACX,mBAAe,CAAEgB,YAAF,CADJ;AAEX,eAAWC,aAFA;AAGX,cAAU,KAHC;AAIX,cAAU;AAJC,GAAD,CAAZ;AAOA,MAAIC,IAAI,GAAG,SAAX;AACA,MAAIC,IAAI,GAAGd,cAAKe,OAAL,CAAalB,QAAb,MAA2B,MAA3B,GAAoC,IAApC,GAA2C,IAAtD;;AAEAmB,sBAAOC,KAAP,CAAa;AACX,YAAQJ,IADG;AAEX,YAAQC,IAFG;AAGX,gBAAY,CAHD;AAIX,aAAS,CACP,CAAE,GAAF,EAAQ,GAAEf,UAAW,MAArB,CADO,EAEP,CAAE,cAAF,EAAmB,GAAEA,UAAW,+BAAhC,CAFO,CAJE;AAQX,YAAQ;AARG,GAAb;;AAWA,MAAI;AAEF,QAAImB,OAAO,GAAG,MAAMC,mBAAQC,MAAR,EAApB;;AAEA,QAAI;AAEF,UAAIC,IAAI,GAAG,MAAMH,OAAO,CAACI,OAAR,EAAjB,CAFE,CAIF;AACA;AACA;;AAEA,YAAMD,IAAI,CAACE,IAAL,CAAW,UAASV,IAAK,IAAGC,IAAK,aAAjC,CAAN;AAEA,UAAIU,OAAO,GAAG,MAAMH,IAAI,CAACI,EAAL,CAAQ,YAAR,CAApB;AACA,UAAIC,IAAI,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACK,GAAR,CAAaL,OAAD,IAAaA,OAAO,CAACM,QAAR,CAAkBC,IAAD,IAAUA,IAAI,CAACC,OAAL,CAAaN,IAAxC,CAAzB,CAAZ,CAAjB;AAEAtB,MAAAA,IAAI,CAAC6B,SAAL,CAAeP,IAAf,EAAqB,CAAE,GAAF,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,GAAzB,CAArB;AAED,KAfD,SAeU;AACR,YAAMR,OAAO,CAACgB,KAAR,EAAN;AACD;AAEF,GAvBD,SAuBU;AACRlB,wBAAOmB,QAAP;AACD;AAEF,CA7DD","sourcesContent":["import Browser from 'puppeteer'\nimport _Bundler from 'esbuild'\nimport Path from 'path'\nimport Server from 'live-server'\nimport Test from 'ava'\n\nimport { Transform } from '../../index.js'\n\nconst { 'build': Bundle } = _Bundler\nconst FilePath = __filePath\nconst FolderPath = Path.dirname(FilePath)\nconst Require = __require\n\nTest('createModuleFromPath(sourcePath, targetPath, option) using browser', async (test) => {\n  \n  let sourcePath = null\n  let targetPath = null\n\n  sourcePath = `${FolderPath}/www/script/element.pug`\n  targetPath = `${FolderPath}/www/script/element.js`\n\n  await Transform.createModuleFromPath(sourcePath, targetPath, { 'utility': Path.relative(Path.dirname(sourcePath), Require.resolve('../../library/utility.js')) })\n\n  let preIndexPath = `${FolderPath}/www/script/pre-index.js`\n  let postIndexPath = `${FolderPath}/www/script/post-index.js`\n\n  await Bundle({\n    'entryPoints': [ preIndexPath ],\n    'outfile': postIndexPath,\n    'minify': false,\n    'bundle': true\n  })\n  \n  let host = '0.0.0.0'\n  let port = Path.extname(FilePath) === '.cjs' ? 8080 : 8081\n\n  Server.start({\n    'host': host,\n    'port': port,\n    'logLevel': 0,\n    'mount': [\n      [ '/', `${FolderPath}/www` ],\n      [ '/favicon.ico', `${FolderPath}/www/resource/application.ico` ]\n    ],\n    'open': false\n  })\n\n  try {\n    \n    let browser = await Browser.launch()\n\n    try {\n    \n      let page = await browser.newPage()\n\n      // page.on('console', (message) => {\n      //   test.log(message.args()[0].toString())\n      // })\n\n      await page.goto(`http://${host}:${port}/index.html`)\n\n      let element = await page.$$('li.element')\n      let item = await Promise.all(element.map((element) => element.evaluate((node) => node.dataset.item)))\n\n      test.deepEqual(item, [ 'a', 'ab', 'bb', 'cb', 'c' ])\n      \n    } finally {\n      await browser.close()\n    }\n\n  } finally {\n    Server.shutdown()\n  }\n\n})\n"],"file":"transform-create-module-from-path-01.test.cjs"}