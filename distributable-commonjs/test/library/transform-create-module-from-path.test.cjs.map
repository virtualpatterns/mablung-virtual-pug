{"version":3,"sources":["../../../source/test/library/transform-create-module-from-path.test.js"],"names":["FilePath","__filename","FolderPath","Path","dirname","Require","require","Test","before","test","sourcePath","targetPath","resolve","extname","Transform","createModuleFromPath","FileSystem","move","Bundler","bundle","host","port","Server","start","context","url","browser","Browser","launch","page","newPage","goto","element","$$","item","Promise","all","map","evaluate","node","dataset","deepEqual","close","after","always","shutdown"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AAEA,MAAMA,QAAQ,GATdC,UASA;;AACA,MAAMC,UAAU,GAAGC,cAAKC,OAAL,CAAaJ,QAAb,CAAnB;;AACA,MAAMK,OAAO,GAXbC,OAWA;;AAEAC,aAAKC,MAAL,CAAY,MAAOC,IAAP,IAAgB;AAE1B,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,UAAU,GAAG,IAAjB;AAEAD,EAAAA,UAAU,GAAGL,OAAO,CAACO,OAAR,CAAgB,0BAAhB,CAAb;AACAD,EAAAA,UAAU,GAAI,GAAED,UAAW,GAAEP,cAAKU,OAAL,CAAab,QAAb,CAAuB,EAApD;AAEA,QAAMc,iBAAUC,oBAAV,CAA+BL,UAA/B,EAA2CC,UAA3C,CAAN;AAEC,GAAED,UAAF,EAAcC,UAAd,IAA6B,CAAEA,UAAF,EAAe,GAAED,UAAW,KAA5B,CAA7B;;AAED,MAAIA,UAAU,KAAKC,UAAnB,EAA+B;AAC7B,UAAMK,iBAAWC,IAAX,CAAgBP,UAAhB,EAA4BC,UAA5B,CAAN;AACD;;AAED,QAAO,IAAIO,sBAAJ,CAAYb,OAAO,CAACO,OAAR,CAAgB,kBAAhB,CAAZ,EAAiD;AACtD,aAAS,KAD6C;AAEtD,gBAAY,CAF0C;AAGtD,cAAU,KAH4C;AAItD,cAAW,GAAEV,UAAW,aAJ8B;AAKtD,cAAU,SAL4C;AAMtD,aAAS;AAN6C,GAAjD,CAAD,CAOFiB,MAPE,EAAN;AASA,MAAIC,IAAI,GAAG,SAAX;AACA,MAAIC,IAAI,GAAGlB,cAAKU,OAAL,CAAab,QAAb,MAA2B,MAA3B,GAAoC,IAApC,GAA2C,IAAtD;;AAEAsB,sBAAOC,KAAP,CAAa;AACX,YAAQH,IADG;AAEX,YAAQC,IAFG;AAGX,gBAAY,CAHD;AAIX,aAAS,CACP,CAAE,GAAF,EAAQ,GAAEnB,UAAW,aAArB,CADO,EAEP,CAAE,cAAF,EAAmB,GAAEA,UAAW,+BAAhC,CAFO,CAJE;AAQX,YAAQ;AARG,GAAb;;AAWAO,EAAAA,IAAI,CAACe,OAAL,CAAaC,GAAb,GAAoB,UAASL,IAAK,IAAGC,IAAK,aAA1C;AAED,CAzCD;;AA2CA,kBAAK,yBAAL,EAAgC,MAAOZ,IAAP,IAAgB;AAE9C,MAAIiB,OAAO,GAAG,MAAMC,mBAAQC,MAAR,EAApB;;AAEA,MAAI;AAEF,QAAIC,IAAI,GAAG,MAAMH,OAAO,CAACI,OAAR,EAAjB;AACA,UAAMD,IAAI,CAACE,IAAL,CAAUtB,IAAI,CAACe,OAAL,CAAaC,GAAvB,CAAN,CAHE,CAKF;;AAEA,QAAIO,OAAO,GAAG,MAAMH,IAAI,CAACI,EAAL,CAAQ,YAAR,CAApB;AACA,QAAIC,IAAI,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACK,GAAR,CAAaL,OAAD,IAAaA,OAAO,CAACM,QAAR,CAAkBC,IAAD,IAAUA,IAAI,CAACC,OAAL,CAAaN,IAAxC,CAAzB,CAAZ,CAAjB;AAEAzB,IAAAA,IAAI,CAACgC,SAAL,CAAeP,IAAf,EAAqB,CAAE,GAAF,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,GAAzB,CAArB;AAED,GAZD,SAYU;AACR,UAAMR,OAAO,CAACgB,KAAR,EAAN;AACD;AAEF,CApBD;;AAsBAnC,aAAKoC,KAAL,CAAWC,MAAX,CAAkB,MAAM;AACtBtB,sBAAOuB,QAAP;AACD,CAFD","sourcesContent":["import Bundler from 'parcel-bundler'\nimport FileSystem from 'fs-extra'\nimport Path from 'path'\nimport Browser from 'puppeteer'\nimport Server from 'live-server'\nimport Test from 'ava'\n\nimport { Transform } from '../../index.js'\n\nconst FilePath = __filePath\nconst FolderPath = Path.dirname(FilePath)\nconst Require = __require\n\nTest.before(async (test) => {\n  \n  let sourcePath = null\n  let targetPath = null\n\n  sourcePath = Require.resolve('./www/script/element.pug')\n  targetPath = `${sourcePath}${Path.extname(FilePath)}`\n\n  await Transform.createModuleFromPath(sourcePath, targetPath)\n\n  ;[ sourcePath, targetPath ] = [ targetPath, `${sourcePath}.js` ]\n\n  if (sourcePath !== targetPath) {\n    await FileSystem.move(sourcePath, targetPath)\n  }\n\n  await (new Bundler(Require.resolve('./www/index.html'), {\n    'cache': false,\n    'logLevel': 2,\n    'minify': false,\n    'outDir': `${FolderPath}/www-bundle`,\n    'target': 'browser',\n    'watch': false\n  })).bundle()\n\n  let host = '0.0.0.0'\n  let port = Path.extname(FilePath) === '.cjs' ? 8080 : 8081\n\n  Server.start({\n    'host': host,\n    'port': port,\n    'logLevel': 0,\n    'mount': [\n      [ '/', `${FolderPath}/www-bundle` ],\n      [ '/favicon.ico', `${FolderPath}/www/resource/application.ico` ]\n    ],\n    'open': false\n  })\n\n  test.context.url = `http://${host}:${port}/index.html`\n\n})\n\nTest('page.$$(\\'li.element\\')', async (test) => {\n\n  let browser = await Browser.launch()\n\n  try {\n  \n    let page = await browser.newPage()\n    await page.goto(test.context.url)\n    \n    // await page.screenshot({path: 'example.png'})\n\n    let element = await page.$$('li.element')\n    let item = await Promise.all(element.map((element) => element.evaluate((node) => node.dataset.item)))\n\n    test.deepEqual(item, [ 'a', 'ab', 'bb', 'cb', 'c' ])\n     \n  } finally {\n    await browser.close()\n  }\n\n})\n\nTest.after.always(() => {\n  Server.shutdown()\n})\n"],"file":"transform-create-module-from-path.test.cjs"}