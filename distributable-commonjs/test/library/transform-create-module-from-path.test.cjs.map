{"version":3,"sources":["../../../source/test/library/transform-create-module-from-path.test.js"],"names":["Bundle","_Bundler","FilePath","__filename","FolderPath","Path","dirname","Require","require","Test","before","test","sourcePath","targetPath","Transform","createModuleFromPath","relative","resolve","inPath","outPath","host","port","extname","Server","start","context","url","browser","Browser","launch","page","newPage","goto","element","$$","item","Promise","all","map","evaluate","node","dataset","deepEqual","close","after","always","shutdown"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AAEA,MAAM;AAAE,WAASA;AAAX,IAAsBC,gBAA5B;AACA,MAAMC,QAAQ,GATdC,UASA;;AACA,MAAMC,UAAU,GAAGC,cAAKC,OAAL,CAAaJ,QAAb,CAAnB;;AACA,MAAMK,OAAO,GAXbC,OAWA;;AAEAC,aAAKC,MAAL,CAAY,MAAOC,IAAP,IAAgB;AAE1B,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,UAAU,GAAG,IAAjB;AAEAD,EAAAA,UAAU,GAAI,GAAER,UAAW,yBAA3B;AACAS,EAAAA,UAAU,GAAI,GAAET,UAAW,wBAA3B;AAEA,QAAMU,iBAAUC,oBAAV,CAA+BH,UAA/B,EAA2CC,UAA3C,EAAuD;AAAE,eAAWR,cAAKW,QAAL,CAAcX,cAAKC,OAAL,CAAaM,UAAb,CAAd,EAAwCL,OAAO,CAACU,OAAR,CAAgB,2BAAhB,CAAxC;AAAb,GAAvD,CAAN,CAR0B,CAU1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIC,MAAM,GAAI,GAAEd,UAAW,0BAA3B;AACA,MAAIe,OAAO,GAAI,GAAEf,UAAW,2BAA5B;AAEAJ,EAAAA,MAAM,CAAC;AACL,mBAAe,CAAEkB,MAAF,CADV;AAEL,eAAWC,OAFN;AAGL,cAAU,KAHL;AAIL,cAAU;AAJL,GAAD,CAAN;AAOA,MAAIC,IAAI,GAAG,SAAX;AACA,MAAIC,IAAI,GAAGhB,cAAKiB,OAAL,CAAapB,QAAb,MAA2B,MAA3B,GAAoC,IAApC,GAA2C,IAAtD;;AAEAqB,sBAAOC,KAAP,CAAa;AACX,YAAQJ,IADG;AAEX,YAAQC,IAFG;AAGX,gBAAY,CAHD;AAIX,aAAS,CACP,CAAE,GAAF,EAAQ,GAAEjB,UAAW,MAArB,CADO,EAEP,CAAE,cAAF,EAAmB,GAAEA,UAAW,+BAAhC,CAFO,CAJE;AAQX,YAAQ;AARG,GAAb;;AAWAO,EAAAA,IAAI,CAACc,OAAL,CAAaC,GAAb,GAAoB,UAASN,IAAK,IAAGC,IAAK,aAA1C;AAED,CA7CD;;AA+CA,kBAAK,yBAAL,EAAgC,MAAOV,IAAP,IAAgB;AAE9C,MAAIgB,OAAO,GAAG,MAAMC,mBAAQC,MAAR,EAApB;;AAEA,MAAI;AAEF,QAAIC,IAAI,GAAG,MAAMH,OAAO,CAACI,OAAR,EAAjB,CAFE,CAIF;AACA;AACA;;AAEA,UAAMD,IAAI,CAACE,IAAL,CAAUrB,IAAI,CAACc,OAAL,CAAaC,GAAvB,CAAN;AAEA,QAAIO,OAAO,GAAG,MAAMH,IAAI,CAACI,EAAL,CAAQ,YAAR,CAApB;AACA,QAAIC,IAAI,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACK,GAAR,CAAaL,OAAD,IAAaA,OAAO,CAACM,QAAR,CAAkBC,IAAD,IAAUA,IAAI,CAACC,OAAL,CAAaN,IAAxC,CAAzB,CAAZ,CAAjB;AAEAxB,IAAAA,IAAI,CAAC+B,SAAL,CAAeP,IAAf,EAAqB,CAAE,GAAF,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,GAAzB,CAArB;AAED,GAfD,SAeU;AACR,UAAMR,OAAO,CAACgB,KAAR,EAAN;AACD;AAEF,CAvBD;;AAyBAlC,aAAKmC,KAAL,CAAWC,MAAX,CAAkB,MAAM;AACtBtB,sBAAOuB,QAAP;AACD,CAFD","sourcesContent":["import _Bundler from 'esbuild'\nimport Path from 'path'\nimport Browser from 'puppeteer'\nimport Server from 'live-server'\nimport Test from 'ava'\n\nimport { Transform } from '../../index.js'\n\nconst { 'build': Bundle } = _Bundler\nconst FilePath = __filePath\nconst FolderPath = Path.dirname(FilePath)\nconst Require = __require\n\nTest.before(async (test) => {\n  \n  let sourcePath = null\n  let targetPath = null\n\n  sourcePath = `${FolderPath}/www/script/element.pug`\n  targetPath = `${FolderPath}/www/script/element.js`\n\n  await Transform.createModuleFromPath(sourcePath, targetPath, { 'utility': Path.relative(Path.dirname(sourcePath), Require.resolve('../../library/utility.js')) })\n\n  // await (new Bundler(Require.resolve('./www/index.html'), {\n  //   'cache': false,\n  //   'logLevel': 2,\n  //   'minify': false,\n  //   'outDir': `${FolderPath}/www-bundle`,\n  //   'target': 'browser',\n  //   'watch': false\n  // })).bundle()\n\n  let inPath = `${FolderPath}/www/script/pre-index.js`\n  let outPath = `${FolderPath}/www/script/post-index.js`\n\n  Bundle({\n    'entryPoints': [ inPath ],\n    'outfile': outPath,\n    'minify': false,\n    'bundle': true\n  })\n  \n  let host = '0.0.0.0'\n  let port = Path.extname(FilePath) === '.cjs' ? 8080 : 8081\n\n  Server.start({\n    'host': host,\n    'port': port,\n    'logLevel': 0,\n    'mount': [\n      [ '/', `${FolderPath}/www` ],\n      [ '/favicon.ico', `${FolderPath}/www/resource/application.ico` ]\n    ],\n    'open': false\n  })\n\n  test.context.url = `http://${host}:${port}/index.html`\n\n})\n\nTest('page.$$(\\'li.element\\')', async (test) => {\n\n  let browser = await Browser.launch()\n\n  try {\n  \n    let page = await browser.newPage()\n\n    // page.on('console', (message) => {\n    //   test.log(message.args()[0].toString())\n    // })\n\n    await page.goto(test.context.url)\n\n    let element = await page.$$('li.element')\n    let item = await Promise.all(element.map((element) => element.evaluate((node) => node.dataset.item)))\n\n    test.deepEqual(item, [ 'a', 'ab', 'bb', 'cb', 'c' ])\n     \n  } finally {\n    await browser.close()\n  }\n\n})\n\nTest.after.always(() => {\n  Server.shutdown()\n})\n"],"file":"transform-create-module-from-path.test.cjs"}