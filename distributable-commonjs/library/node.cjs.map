{"version":3,"sources":["../../source/library/node.js"],"names":["FilePath","__filename","paramCase","ParameterCase","DefaultChangeCase","ModuleChangeCase","Node","constructor","node","option","_node","_option","getSource","createNode","extension","Path","extname","toLowerCase","nodeClass","type","default"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA,MAAMA,QAAQ,GAHdC,UAGA;AACA,MAAM;AAAEC,EAAAA,SAAS,EAAEC;AAAb,IAA+BC,4BAAqBC,gBAA1D;;AAEA,MAAMC,IAAN,CAAW;AAETC,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAe;AACxB,SAAKC,KAAL,GAAaF,IAAb;AACA,SAAKG,OAAL,GAAeF,MAAf;AACD;;AAED,QAAMG,SAAN,GAAkB,CAAE;;AAEpB,eAAaC,UAAb,CAAwBL,IAAxB,EAA8BC,MAA9B,EAAsC;AAEpC,QAAIK,SAAS,GAAG,IAAhB;AACAA,IAAAA,SAAS,GAAGC,cAAKC,OAAL,CAAahB,QAAb,CAAZ;AACAc,IAAAA,SAAS,GAAGA,SAAS,CAACG,WAAV,EAAZ;AAEA,QAAIC,SAAS,GAAG,IAAhB;AACAA,IAAAA,SAAS,GAAG,sBAAc,UAASf,aAAa,CAACK,IAAI,CAACW,IAAN,CAAY,QAAOL,SAAU,EAAjE,gDAAZ;AACAI,IAAAA,SAAS,GAAGA,SAAS,CAACE,OAAV,IAAqBF,SAAjC;AAEA,WAAO,IAAIA,SAAJ,CAAcV,IAAd,EAAoBC,MAApB,CAAP;AAED,GArBQ,CAuBT;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;;AArCS;;eAyCIH,I","sourcesContent":["import DefaultChangeCase, * as ModuleChangeCase from 'change-case'\nimport Path from 'path'\n\nconst FilePath = __filePath\nconst { paramCase: ParameterCase } = DefaultChangeCase || ModuleChangeCase\n\nclass Node {\n\n  constructor(node, option) {\n    this._node = node\n    this._option = option\n  }\n\n  async getSource() {}\n\n  static async createNode(node, option) {\n\n    let extension = null\n    extension = Path.extname(FilePath)\n    extension = extension.toLowerCase()\n\n    let nodeClass = null\n    nodeClass = await import(`./node/${ParameterCase(node.type)}-node${extension}`)\n    nodeClass = nodeClass.default || nodeClass\n\n    return new nodeClass(node, option)\n\n  }\n\n  // static __escape(value) {\n\n  //   if (typeof value === 'string') {\n      \n  //     value = value.replace(/\"/gi, '&quot;')\n  //     value = value.replace(/'/gi, '&#39;')\n  //     value = value.replace(/&/gi, '&amp;')\n  //     value = value.replace(/</gi, '&lt;')\n  //     value = value.replace(/>/gi, '&gt;')\n  \n  //   }\n\n  //   return value\n\n  // }\n\n}\n\nexport default Node"],"file":"node.cjs"}