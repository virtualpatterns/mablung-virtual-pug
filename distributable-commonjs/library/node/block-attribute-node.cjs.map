{"version":3,"sources":["../../../source/library/node/block-attribute-node.js"],"names":["BlockAttributeNode","Node","constructor","node","option","isEmpty","_node","attrs","length","attributeBlocks","getSource","attributeNode","map","AttributeNode","_option","AndAttributeNode","attributeSource","Promise","all","join"],"mappings":";;;;;;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,kBAAN,SAAiCC,aAAjC,CAAsC;AAEpCC,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAe;AACxB,UAAMD,IAAN,EAAYC,MAAZ;AACD;;AAED,MAAIC,OAAJ,GAAc;AACZ,WAAQ,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,GAA0B,KAAKF,KAAL,CAAWG,eAAX,CAA2BD,MAAtD,IAAiE,CAAxE;AACD;;AAED,QAAME,SAAN,GAAkB;AAEhB,QAAIC,aAAa,GAAG,CAAE,GAAG,KAAKL,KAAL,CAAWC,KAAX,CAAiBK,GAAjB,CAAsBT,IAAD,IAAU,IAAIU,sBAAJ,CAAkBV,IAAlB,EAAwB,KAAKW,OAA7B,CAA/B,CAAL,EAA4E,GAAG,KAAKR,KAAL,CAAWG,eAAX,CAA2BG,GAA3B,CAAgCT,IAAD,IAAU,IAAIY,yBAAJ,CAAqBZ,IAArB,EAA2B,KAAKW,OAAhC,CAAzC,CAA/E,CAApB;AAEA,QAAIE,eAAe,GAAG,IAAtB;AACAA,IAAAA,eAAe,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYP,aAAa,CAACC,GAAd,CAAmBD,aAAD,IAAmBA,aAAa,CAACD,SAAd,EAArC,CAAZ,CAAxB;AACAM,IAAAA,eAAe,GAAGA,eAAe,CAACG,IAAhB,CAAqB,IAArB,CAAlB;AAEA,WAAOH,eAAP;AAED;;AApBmC;;eAwBvBhB,kB","sourcesContent":["\nimport Node from '../node.js'\nimport AndAttributeNode from './and-attribute-node.js'\nimport AttributeNode from './attribute-node.js'\n\nclass BlockAttributeNode extends Node {\n\n  constructor(node, option) {\n    super(node, option)\n  }\n\n  get isEmpty() {\n    return (this._node.attrs.length + this._node.attributeBlocks.length) <= 0\n  }\n\n  async getSource() {\n\n    let attributeNode = [ ...this._node.attrs.map((node) => new AttributeNode(node, this._option)), ...this._node.attributeBlocks.map((node) => new AndAttributeNode(node, this._option)) ]\n\n    let attributeSource = null\n    attributeSource = await Promise.all(attributeNode.map((attributeNode) => attributeNode.getSource()))\n    attributeSource = attributeSource.join('\\n')\n\n    return attributeSource\n\n  }\n\n}\n\nexport default BlockAttributeNode"],"file":"block-attribute-node.cjs"}