{"version":3,"sources":["../../../source/library/node/attribute-node.js"],"names":["AttributeNode","Node","constructor","attribute","option","_attribute","getSource","mustEscape","UnsupportedAttributeTransformError","__addAttribute","isCalled","name","val","value","attributeNode","__getAttributeName","__getAttributeValue","undefined","currentValue","Array","isArray","join","toUpperCase","Object","keys","filter","key","map"],"mappings":";;;;;;;AACA;;AAEA;;;;AAEA,MAAMA,aAAN,SAA4BC,aAA5B,CAAiC;AAE/BC,EAAAA,WAAW,CAACC,SAAD,EAAYC,MAAZ,EAAoB;AAC7B,UAAMD,SAAN,EAAiBC,MAAjB;AACA,SAAKC,UAAL,GAAkBF,SAAlB;AACD;;AAEDG,EAAAA,SAAS,GAAG;AAEV,QAAI,KAAKD,UAAL,CAAgBE,UAApB,EAAgC;AAC9B,YAAM,IAAIC,sEAAJ,CAAuC,KAAKH,UAA5C,CAAN;AACD,KAFD,MAEO;AAELL,MAAAA,aAAa,CAACS,cAAd,CAA6BC,QAA7B,GAAwC,IAAxC;AAEA,aAAQ,mBAAkB,KAAKL,UAAL,CAAgBM,IAAK,MAAK,KAAKN,UAAL,CAAgBO,GAAI,oBAAxE;AAED;AAEF;AAED;;;AACA,SAAOH,cAAP,CAAsBE,IAAtB,EAA4BE,KAA5B,EAAmCC,aAAnC,EAAkD;AAEhD,QAAI,OAAOD,KAAP,KAAiB,SAAjB,IACAA,KAAK,KAAK,KADd,EACqB,CACnB;AACD,KAHD,MAGO;AAELF,MAAAA,IAAI,GAAGI,kBAAkB,CAACJ,IAAD,CAAzB,CAFK,CAE2B;;AAChCE,MAAAA,KAAK,GAAGG,mBAAmB,CAACL,IAAD,EAAOE,KAAP,EAAcC,aAAa,CAACH,IAAD,CAA3B,CAA3B,CAHK,CAGyD;;AAE9D,UAAIE,KAAK,KAAKI,SAAd,EAAyB;AACvBH,QAAAA,aAAa,CAACH,IAAD,CAAb,GAAsBE,KAAtB;AACD;AAEF;AAEF;AAED;;;AACA,SAAOE,kBAAP,CAA0BJ,IAA1B,EAAgC;AAC9B,WAAOA,IAAP;AACD;AAED;;;AACA,SAAOK,mBAAP,CAA2BL,IAA3B,EAAiCE,KAAjC,EAAwCK,YAAxC,EAAsD;AAEpD,QAAI,OAAOL,KAAP,KAAiB,SAArB,EAAgC;AAC9BA,MAAAA,KAAK,GAAGA,KAAK,GAAGF,IAAH,GAAU,KAAvB;AACD,KAFD,MAEO,IAAI,OAAOE,KAAP,KAAiB,QAArB,EAA+B;AACpCA,MAAAA,KAAK,GAAGK,YAAY,GAAI,GAAEA,YAAa,IAAGL,KAAM,EAA5B,GAAgCA,KAApD;AACD,KAFM,MAEA,IAAIM,KAAK,CAACC,OAAN,CAAcP,KAAd,CAAJ,EAA0B;AAC/BA,MAAAA,KAAK,GAAGK,YAAY,GAAI,GAAEA,YAAa,IAAGL,KAAK,CAACQ,IAAN,CAAW,GAAX,CAAgB,EAAtC,GAA0CR,KAAK,CAACQ,IAAN,CAAW,GAAX,CAA9D;AACD,KAFM,MAEA;AAEL,cAAQV,IAAI,CAACW,WAAL,EAAR;AACE,aAAK,OAAL;AACET,UAAAA,KAAK,GAAGU,MAAM,CAACC,IAAP,CAAYX,KAAZ,EACLY,MADK,CACGC,GAAD,IAASb,KAAK,CAACa,GAAD,CADhB,EAELL,IAFK,CAEA,GAFA,CAAR;AAGA;;AACF,aAAK,OAAL;AACER,UAAAA,KAAK,GAAGU,MAAM,CAACC,IAAP,CAAYX,KAAZ,EACLc,GADK,CACAD,GAAD,IAAU,GAAEA,GAAI,IAAGb,KAAK,CAACa,GAAD,CAAM,GAD7B,EAELL,IAFK,CAEA,EAFA,CAAR;AAGA;AAVJ;AAaD;;AAED,WAAOR,KAAK,KAAK,EAAV,GAAeI,SAAf,GAA2BJ,KAAlC;AAED;;AAzE8B;;eA6ElBb,a","sourcesContent":["\nimport Node from '../node.js'\n\nimport { UnsupportedAttributeTransformError } from '../error/unsupported-attribute-transform-error.js'\n\nclass AttributeNode extends Node {\n\n  constructor(attribute, option) {\n    super(attribute, option)\n    this._attribute = attribute\n  }\n\n  getSource() {\n\n    if (this._attribute.mustEscape) {\n      throw new UnsupportedAttributeTransformError(this._attribute)\n    } else {\n  \n      AttributeNode.__addAttribute.isCalled = true\n\n      return `__addAttribute('${this._attribute.name}', ${this._attribute.val}, __attributeNode)`\n\n    }\n\n  }\n\n  /* c8 ignore next 15 */\n  static __addAttribute(name, value, attributeNode) {\n\n    if (typeof value === 'boolean' &&\n        value === false) {\n      // do nothing\n    } else {\n\n      name = __getAttributeName(name) // eslint-disable-line no-undef\n      value = __getAttributeValue(name, value, attributeNode[name]) // eslint-disable-line no-undef\n\n      if (value !== undefined) {\n        attributeNode[name] = value\n      }\n\n    }\n\n  }\n\n  /* c8 ignore next 9 */\n  static __getAttributeName(name) {\n    return name\n  }\n\n  /* c8 ignore next 28 */\n  static __getAttributeValue(name, value, currentValue) {\n\n    if (typeof value === 'boolean') {\n      value = value ? name : false\n    } else if (typeof value === 'string') {\n      value = currentValue ? `${currentValue} ${value}` : value\n    } else if (Array.isArray(value)) {\n      value = currentValue ? `${currentValue} ${value.join(' ')}` : value.join(' ')\n    } else {\n\n      switch (name.toUpperCase()) {\n        case 'CLASS':\n          value = Object.keys(value)\n            .filter((key) => value[key])\n            .join(' ')\n          break\n        case 'STYLE':\n          value = Object.keys(value)\n            .map((key) => `${key}:${value[key]};`)\n            .join('')\n          break\n      }\n\n    }\n\n    return value === '' ? undefined : value\n\n  }\n\n}\n\nexport default AttributeNode"],"file":"attribute-node.cjs"}