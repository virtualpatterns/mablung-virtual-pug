{"version":3,"sources":["../../../source/library/node/conditional-node.js"],"names":["ConditionalNode","Node","constructor","node","option","getSource","source","blockNode","BlockNode","_node","consequent","_option","blockSource","isEmpty","test","alternate","alternateNode","createNode","alternateSource"],"mappings":";;;;;;;AACA;;AACA;;;;AAEA,MAAMA,eAAN,SAA8BC,aAA9B,CAAmC;AAEjCC,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAe;AACxB,UAAMD,IAAN,EAAYC,MAAZ;AACD;;AAED,QAAMC,SAAN,GAAkB;AAEhB,QAAIC,MAAM,GAAG,IAAb;AAEA,QAAIC,SAAS,GAAG,IAAIC,kBAAJ,CAAc,KAAKC,KAAL,CAAWC,UAAzB,EAAqC,KAAKC,OAA1C,CAAhB;AACA,QAAIC,WAAW,GAAGL,SAAS,CAACM,OAAV,GAAoB,EAApB,GAAyB,MAAMN,SAAS,CAACF,SAAV,EAAjD;AAEAC,IAAAA,MAAM,GAAK,QAAO,KAAKG,KAAL,CAAWK,IAAK;AACtC,oBAAoBF,WAAY;AAChC,kBAFI;;AAIA,QAAI,KAAKH,KAAL,CAAWM,SAAf,EAA0B;AAExB,UAAIC,aAAa,GAAG,MAAMf,cAAKgB,UAAL,CAAgB,KAAKR,KAAL,CAAWM,SAA3B,EAAsC,KAAKJ,OAA3C,CAA1B;AACA,UAAIO,eAAe,GAAG,MAAMF,aAAa,CAACX,SAAd,EAA5B;AAEAC,MAAAA,MAAM,GAAK,IAAGA,MAAO;AAC3B,sBAAsBY,eAAgB;AACtC,oBAFM;AAID;;AAED,WAAOZ,MAAP;AAED;;AA9BgC;;eAkCpBN,e","sourcesContent":["\nimport BlockNode from './block-node.js'\nimport Node from '../node.js'\n\nclass ConditionalNode extends Node {\n\n  constructor(node, option) {\n    super(node, option)\n  }\n\n  async getSource() {\n\n    let source = null\n\n    let blockNode = new BlockNode(this._node.consequent, this._option)\n    let blockSource = blockNode.isEmpty ? '' : await blockNode.getSource()\n\n    source =  ` if (${this._node.test}) {\n                  ${blockSource}\n                }`\n\n    if (this._node.alternate) {\n\n      let alternateNode = await Node.createNode(this._node.alternate, this._option)\n      let alternateSource = await alternateNode.getSource()\n\n      source =  ` ${source} else {\n                    ${alternateSource} \n                  }`\n\n    }\n\n    return source\n  \n  }\n\n}\n\nexport default ConditionalNode\n"],"file":"conditional-node.cjs"}