{"version":3,"sources":["../../../source/library/node/each-node.js"],"names":["EachNode","Node","constructor","node","option","getSource","source","blockNode","BlockNode","_node","block","_option","blockSource","isEmpty","obj","val","key","alternate","alternateNode","alternateSource"],"mappings":";;;;;;;AACA;;AACA;;;;AAEA,MAAMA,QAAN,SAAuBC,aAAvB,CAA4B;AAE1BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAe;AACxB,UAAMD,IAAN,EAAYC,MAAZ;AACD;;AAED,QAAMC,SAAN,GAAkB;AAEhB,QAAIC,MAAM,GAAG,IAAb;AAEA,QAAIC,SAAS,GAAG,IAAIC,kBAAJ,CAAc,KAAKC,KAAL,CAAWC,KAAzB,EAAgC,KAAKC,OAArC,CAAhB;AACA,QAAIC,WAAW,GAAGL,SAAS,CAACM,OAAV,GAAoB,EAApB,GAAyB,MAAMN,SAAS,CAACF,SAAV,EAAjD;AAEAC,IAAAA,MAAM,GAAK,sBAAqB,KAAKG,KAAL,CAAWK,GAAI,MAAK,KAAKL,KAAL,CAAWM,GAAI,GAAE,KAAKN,KAAL,CAAWO,GAAX,GAAkB,KAAI,KAAKP,KAAL,CAAWO,GAAI,EAArC,GAAyC,EAAG;AACrH,oBAAoBJ,WAAY;AAChC,mBAFI;;AAIA,QAAI,KAAKH,KAAL,CAAWQ,SAAf,EAA0B;AAExB,UAAIC,aAAa,GAAG,IAAIV,kBAAJ,CAAc,KAAKC,KAAL,CAAWQ,SAAzB,EAAoC,KAAKN,OAAzC,CAApB;AACA,UAAIQ,eAAe,GAAGD,aAAa,CAACL,OAAd,GAAwB,EAAxB,GAA6B,MAAMK,aAAa,CAACb,SAAd,EAAzD;AAEAC,MAAAA,MAAM,GAAK,QAAOA,MAAO;AAC/B,sBAAsBa,eAAgB;AACtC,oBAFM;AAID;;AAED,WAAOb,MAAP;AAED;;AA9ByB;;eAkCbN,Q","sourcesContent":["\nimport BlockNode from './block-node.js'\nimport Node from '../node.js'\n\nclass EachNode extends Node {\n\n  constructor(node, option) {\n    super(node, option)\n  }\n\n  async getSource() {\n\n    let source = null\n\n    let blockNode = new BlockNode(this._node.block, this._option)\n    let blockSource = blockNode.isEmpty ? '' : await blockNode.getSource()\n    \n    source =  ` __utility.forEach(${this._node.obj}, (${this._node.val}${this._node.key ? `, ${this._node.key}` : ''}) => { \n                  ${blockSource}\n                })`\n\n    if (this._node.alternate) {\n\n      let alternateNode = new BlockNode(this._node.alternate, this._option)\n      let alternateSource = alternateNode.isEmpty ? '' : await alternateNode.getSource()\n  \n      source =  ` if (${source} <= 0) {\n                    ${alternateSource}\n                  }`\n\n    }\n\n    return source\n\n  }\n\n}\n\nexport default EachNode"],"file":"each-node.cjs"}