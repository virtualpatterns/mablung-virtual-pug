{"version":3,"sources":["../../source/sandbox/dokno.js"],"names":["Require","require","main","path","resolve","module","Transform","createModuleFromPath","default","virtualNode","realNode","map","console","log","repeat","forEach","toString","error"],"mappings":";;AAAA;;AACA;;AACA;;AAEA;;;;AAEA,MAAMA,OAAO,GANbC,OAMA;;AAEA,eAAeC,IAAf,GAAsB;AAEpB,MAAI;AAEF,QAAIC,IAAI,GAAGH,OAAO,CAACI,OAAR,CAAgB,gCAAhB,CAAX;AAEA,QAAIC,MAAM,GAAG,IAAb;AACAA,IAAAA,MAAM,GAAG,MAAMC,qBAAUC,oBAAV,CAA+BJ,IAA/B,CAAf;AACAE,IAAAA,MAAM,GAAGA,MAAM,CAACG,OAAP,IAAkBH,MAA3B;AAEA,QAAII,WAAW,GAAGJ,MAAM,EAAxB,CARE,CAUF;AACA;AACA;AACA;;AAEA,QAAIK,QAAQ,GAAGD,WAAW,CAACE,GAAZ,CAAiBF,WAAD,IAAiB,4BAAeA,WAAf,CAAjC,CAAf;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ;AACAJ,IAAAA,QAAQ,CAACK,OAAT,CAAkBL,QAAD,IAAcE,OAAO,CAACC,GAAR,CAAY,qBAAOH,QAAQ,CAACM,QAAT,EAAP,CAAZ,CAA/B;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ;AAED,GAvBD,CAuBE,OAAOG,KAAP,EAAc;AACdL,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ;AACAF,IAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ;AACD;AAEF;;AAEDZ,IAAI","sourcesContent":["import '@virtualpatterns/mablung-source-map-support/install'\nimport CreateRealNode from 'virtual-dom/create-element.js'\nimport Format from 'pretty'\n\nimport { Transform } from '../library/transform.js'\n\nconst Require = __require\n\nasync function main() {\n\n  try {\n\n    let path = Require.resolve('../../source/sandbox/dokno.pug')\n\n    let module = null\n    module = await Transform.createModuleFromPath(path)\n    module = module.default || module\n\n    let virtualNode = module()\n\n    // console.log('-'.repeat(80))\n    // console.log('virtualNode')\n    // console.log('-'.repeat(80))\n    // console.dir(virtualNode, { 'depth': null })\n\n    let realNode = virtualNode.map((virtualNode) => CreateRealNode(virtualNode)) \n\n    console.log('-'.repeat(80))\n    console.log('CreateRealNode(virtualNode)')\n    console.log('-'.repeat(80))\n    realNode.forEach((realNode) => console.log(Format(realNode.toString()))) \n    console.log('-'.repeat(80))\n\n  } catch (error) {\n    console.log('-'.repeat(80))\n    console.error(error)\n    console.log('-'.repeat(80))\n  }\n\n}\n\nmain()"],"file":"dokno.cjs"}