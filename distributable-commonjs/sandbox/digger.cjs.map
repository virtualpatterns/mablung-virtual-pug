{"version":3,"sources":["../../source/sandbox/digger.js"],"names":["Convert","VirtualNode","VirtualText","Require","require","main","path","resolve","pugHTML","Pug","compileFile","pugNode","console","log","repeat","dir","myNode","Transform","getFunctionFromPath","error"],"mappings":";;AAAA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;;;AAEA,MAAMA,OAAO,GAAG,yBAAS;AAAE,WAASC,cAAX;AAAwB,WAASC;AAAjC,CAAT,CAAhB;AACA,MAAMC,OAAO,GAVbC,OAUA;;AAEA,eAAeC,IAAf,GAAsB;AAEpB,MAAI;AAEF,QAAIC,IAAI,GAAGH,OAAO,CAACI,OAAR,CAAgB,cAAhB,CAAX;AAEA,QAAIC,OAAO,GAAG,IAAd;AACAA,IAAAA,OAAO,GAAGC,aAAIC,WAAJ,CAAgBJ,IAAhB,GAAV;AAEA,QAAIK,OAAO,GAAGX,OAAO,CAACQ,OAAD,CAArB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ;AACAF,IAAAA,OAAO,CAACG,GAAR,CAAYJ,OAAZ,EAAqB;AAAE,eAAS;AAAX,KAArB;AAEA,QAAIK,MAAM,GAAG,CAAC,MAAMC,iBAAUC,mBAAV,CAA8BZ,IAA9B,CAAP,GAAb;AAEAM,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ;AACAF,IAAAA,OAAO,CAACG,GAAR,CAAYC,MAAZ,EAAoB;AAAE,eAAS;AAAX,KAApB;AAED,GArBD,CAqBE,OAAOG,KAAP,EAAc;AACdP,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ;AACAF,IAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAIC,MAAJ,CAAW,EAAX,CAAZ;AACD;AAEF;;AAEDT,IAAI","sourcesContent":["import '@virtualpatterns/mablung-source-map-support/install'\nimport Pug from 'pug'\n\nimport _Convert from 'html-to-vdom'\nimport VirtualNode from 'virtual-dom/vnode/vnode.js'\nimport VirtualText from 'virtual-dom/vnode/vtext.js'\n\nimport { Transform } from '../index.js'\n\nconst Convert = _Convert({ 'VNode': VirtualNode, 'VText': VirtualText })\nconst Require = __require\n\nasync function main() {\n\n  try {\n\n    let path = Require.resolve('./digger.pug')\n\n    let pugHTML = null\n    pugHTML = Pug.compileFile(path)()\n\n    let pugNode = Convert(pugHTML)\n\n    console.log('-'.repeat(80))\n    console.log('pugNode')\n    console.log('-'.repeat(80))\n    console.dir(pugNode, { 'depth': null })\n\n    let myNode = (await Transform.getFunctionFromPath(path))()\n\n    console.log('-'.repeat(80))\n    console.log('myNode')\n    console.log('-'.repeat(80))\n    console.dir(myNode, { 'depth': null })\n\n  } catch (error) {\n    console.log('-'.repeat(80))\n    console.error(error)\n    console.log('-'.repeat(80))\n  }\n\n}\n\nmain()"],"file":"digger.cjs"}