{"version":3,"sources":["../../source/sandbox/dunno.js"],"names":["ConvertToNode","VirtualNode","VirtualText","FormatJS","_FormatJS","Require","require","main","path","resolve","AST","Transform","getASTFromPath","console","log","repeat","dir","source","getFunctionSourceFromPath","virtualFn","getFunctionFromPath","toString","virtualNode","CreateNode","realNode","map","forEach","error"],"mappings":"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","sourcesContent":["// import '@virtualpatterns/mablung-source-map-support/install'\nimport CreateRealNode from 'virtual-dom/create-element.js'\nimport CreateNode from 'virtual-dom/h.js'\nimport FormatHTML from 'pretty'\nimport _FormatJS from 'prettier'\n\nimport _ConvertToNode from 'html-to-vdom'\nimport VirtualNode from 'virtual-dom/vnode/vnode.js'\nimport VirtualText from 'virtual-dom/vnode/vtext.js'\n\nimport { Transform } from '../library/transform.js'\n\nconst ConvertToNode = _ConvertToNode({ 'VNode': VirtualNode, 'VText': VirtualText })\nconst { 'format': FormatJS } = _FormatJS\nconst Require = __require\n\nasync function main() {\n\n  try {\n\n    let path = Require.resolve('./dunno-content.pug')\n    let AST = await Transform.getASTFromPath(path)\n\n    console.log('-'.repeat(80))\n    console.log('Transform.getASTFromPath(path)')\n    console.log('-'.repeat(80))\n    console.dir(AST, { 'depth': null })\n\n    let source = null\n    source = await Transform.getFunctionSourceFromPath(path)\n\n    console.log('-'.repeat(80))\n    console.log('Transform.getFunctionSourceFromPath(path)')\n    console.log('-'.repeat(80))\n    console.log(source)\n\n    let virtualFn = await Transform.getFunctionFromPath(path)\n\n    source = virtualFn.toString()\n\n    console.log('-'.repeat(80))\n    console.log('Transform.getFunctionFromPath(path)')\n    console.log('-'.repeat(80))\n    console.log(source)\n\n    let virtualNode = virtualFn({ 'abc': function() {} }, { 'createNode': CreateNode, 'convertToNode': ConvertToNode })\n\n    console.log('-'.repeat(80))\n    console.log('virtualFn(...)')\n    console.log('-'.repeat(80))\n    console.dir(virtualNode, { 'depth': null })\n\n    let realNode = virtualNode.map((virtualNode) => CreateRealNode(virtualNode)) \n    \n    console.log('-'.repeat(80))\n    console.log('CreateRealNode(virtualNode)')\n    console.log('-'.repeat(80))\n    console.dir(realNode, { 'depth': 4 })\n    console.log('-'.repeat(80))\n    realNode.forEach((realNode) => console.log(FormatHTML(realNode.toString()))) \n    console.log('-'.repeat(80))\n\n    // let realHTML = virtualNode\n    //   .map((virtualNode) => CreateRealNode(virtualNode))\n    //   .join('\\n')\n\n    // console.log('-'.repeat(80))\n    // console.log('Convert(virtualNode)')\n    // console.log('-'.repeat(80))\n    // console.log(FormatHTML(realHTML))\n    // console.log('-'.repeat(80))\n\n  } catch (error) {\n    console.log('-'.repeat(80))\n    console.error(error)\n    console.log('-'.repeat(80))\n  }\n\n}\n\nmain()"],"file":"dunno.cjs"}