{"version":3,"sources":["../../../source/test/library/transform.test.js"],"names":["test","notThrowsAsync","Transform","getASTFromPath","require","resolve","getSourceFromPath","getFunctionSourceFromPath","forEach","path","Path","relative","__dirname","throwsAsync","getFunctionFromPath","UnsupportedAttributeTransformError","UnsupportedCodeTransformError","UnsupportedCommentTransformError","UnsupportedDocTypeTransformError","UnsupportedTagTransformError"],"mappings":"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","sourcesContent":["import Path from 'path'\nimport Test from 'ava'\n\nimport { Transform } from '../../index.js'\n\nimport { UnsupportedAttributeTransformError } from '../../index.js'\nimport { UnsupportedCodeTransformError } from '../../index.js'\nimport { UnsupportedCommentTransformError } from '../../index.js'\nimport { UnsupportedDocTypeTransformError } from '../../index.js'\nimport { UnsupportedTagTransformError } from '../../index.js'\n\nTest('getASTFromPath(path)', async (test) => {\n  await test.notThrowsAsync(Transform.getASTFromPath(require.resolve('./resource/00-default.pug')))\n})\n\nTest('getSourceFromPath(path)', async (test) => {\n  await test.notThrowsAsync(Transform.getSourceFromPath(require.resolve('./resource/00-default.pug')))\n})\n\nTest('getFunctionSourceFromPath(path)', async (test) => {\n  await test.notThrowsAsync(Transform.getFunctionSourceFromPath(require.resolve('./resource/00-default.pug')))\n})\n\n// Test('createModuleFromPath(path)', async (test) => {\n\n//   let module = await Transform.createModuleFromPath(require.resolve('./resource/00-default.pug'))\n//   let virtualFn = module.default\n\n//   test.notThrows(() => virtualFn())\n\n// })\n\n;[ \n  require.resolve('./resource/transform/attribute/07-escaped-attributes.pug') \n].forEach((path) => {\n\n  Test(`getFunctionFromPath('${Path.relative(`${__dirname}/resource/transform`, path)}') throws UnsupportedAttributeTransformError`, async (test) => {\n    await test.throwsAsync(Transform.getFunctionFromPath(path), { 'instanceOf': UnsupportedAttributeTransformError })\n  })\n  \n})\n\n;[ \n  require.resolve('./resource/transform/code/04-escaped-buffered-code.pug'),\n  require.resolve('./resource/transform/code/05-escaped-buffered-inline-code.pug')\n].forEach((path) => {\n\n  Test(`getFunctionFromPath('${Path.relative(`${__dirname}/resource/transform`, path)}') throws UnsupportedCodeTransformError`, async (test) => {\n    await test.throwsAsync(Transform.getFunctionFromPath(path), { 'instanceOf': UnsupportedCodeTransformError })\n  })\n\n})\n\n;[ \n  require.resolve('./resource/transform/comment/00-default-buffered.pug'),\n  require.resolve('./resource/transform/comment/02-block-buffered-comment.pug')\n].forEach((path) => {\n\n  Test(`getFunctionFromPath('${Path.relative(`${__dirname}/resource/transform`, path)}') throws UnsupportedCommentTransformError`, async (test) => {\n    await test.throwsAsync(Transform.getFunctionFromPath(path), { 'instanceOf': UnsupportedCommentTransformError })\n  })\n\n})\n\n;[ \n  require.resolve('./resource/transform/doctype/00-default.pug')\n].forEach((path) => {\n\n  Test(`getFunctionFromPath('${Path.relative(`${__dirname}/resource/transform`, path)}') throws UnsupportedDocTypeTransformError`, async (test) => {\n    await test.throwsAsync(Transform.getFunctionFromPath(path), { 'instanceOf': UnsupportedDocTypeTransformError })\n  })\n\n})\n\n;[ \n  require.resolve('./resource/transform/tag/02-self-closing-tag.pug')\n].forEach((path) => {\n\n  Test(`getFunctionFromPath('${Path.relative(`${__dirname}/resource/transform`, path)}') throws UnsupportedTagTransformError`, async (test) => {\n    await test.throwsAsync(Transform.getFunctionFromPath(path), { 'instanceOf': UnsupportedTagTransformError })\n  })\n\n})\n"],"file":"transform.test.js"}