{"version":3,"sources":["../../../source/test/library/scenario.test.js"],"names":["main","Scenario","createScenarioFromFolder","__dirname","forEach","scenario","Test","modifier","reduce","__Test","_Test","Path","relative","path","test","virtualHTML","realHTML","getHTML","log","repeat","is","require","resolve","createScenarioFromFile","throwsAsync","TypeError","not"],"mappings":";;AAAA;;AACA;;AAEA;;;;AAEA,eAAeA,IAAf,GAAsB;AAEpB,GAAC,MAAMC,mBAASC,wBAAT,CAAmC,GAAEC,SAAU,oBAA/C,CAAP,EAA4EC,OAA5E,CAAqFC,QAAD,IAAc;AAEhG,QAAIC,IAAI,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,MAAlB,CAAyB,CAACC,MAAD,EAASF,QAAT,KAAsBE,MAAM,CAACF,QAAD,CAArD,EAAiEG,YAAjE,CAAX;AAEAJ,IAAAA,IAAI,CAAE,oBAAmBK,cAAKC,QAAL,CAAe,GAAET,SAAU,oBAA3B,EAAgDE,QAAQ,CAACQ,IAAzD,CAA+D,GAApF,EAAwF,MAAOC,IAAP,IAAgB;AAE1G,UAAI;AAAEC,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAA4B,MAAMX,QAAQ,CAACY,OAAT,EAAtC;;AAEA,UAAIF,WAAW,KAAKC,QAApB,EAA8B;AAE5BF,QAAAA,IAAI,CAACI,GAAL,CAAS,IAAIC,MAAJ,CAAW,EAAX,CAAT;AACAL,QAAAA,IAAI,CAACI,GAAL,CAAS,UAAT;AACAJ,QAAAA,IAAI,CAACI,GAAL,CAAS,IAAIC,MAAJ,CAAW,EAAX,CAAT;AACAL,QAAAA,IAAI,CAACI,GAAL,CAASF,QAAT;AAEAF,QAAAA,IAAI,CAACI,GAAL,CAAS,IAAIC,MAAJ,CAAW,EAAX,CAAT;AACAL,QAAAA,IAAI,CAACI,GAAL,CAAS,aAAT;AACAJ,QAAAA,IAAI,CAACI,GAAL,CAAS,IAAIC,MAAJ,CAAW,EAAX,CAAT;AACAL,QAAAA,IAAI,CAACI,GAAL,CAASH,WAAT;AACAD,QAAAA,IAAI,CAACI,GAAL,CAAS,IAAIC,MAAJ,CAAW,EAAX,CAAT;AAED;;AAEDL,MAAAA,IAAI,CAACM,EAAL,CAAQL,WAAR,EAAqBC,QAArB;AAED,KArBG,CAAJ;AAuBD,GA3BD;AA6BC,GACCK,OAAO,CAACC,OAAR,CAAgB,mDAAhB,CADD,EAEClB,OAFD,CAEUS,IAAD,IAAU;AAElB,sBAAO,oBAAmBF,cAAKC,QAAL,CAAe,GAAET,SAAU,oBAA3B,EAAgDU,IAAhD,CAAsD,oBAAhF,EAAqG,MAAOC,IAAP,IAAgB;AACnH,UAAIT,QAAQ,GAAG,MAAMJ,mBAASsB,sBAAT,CAAgCV,IAAhC,CAArB;AACA,YAAMC,IAAI,CAACU,WAAL,CAAiBnB,QAAQ,CAACY,OAAT,EAAjB,EAAqC;AAAE,sBAAcQ;AAAhB,OAArC,CAAN;AACD,KAHD;AAKD,GATA;AAWA,GACCJ,OAAO,CAACC,OAAR,CAAgB,+DAAhB,CADD,EAECD,OAAO,CAACC,OAAR,CAAgB,6DAAhB,CAFD,EAGCD,OAAO,CAACC,OAAR,CAAgB,sDAAhB,CAHD,EAICD,OAAO,CAACC,OAAR,CAAgB,uDAAhB,CAJD,EAKClB,OALD,CAKUS,IAAD,IAAU;AAElB,sBAAO,oBAAmBF,cAAKC,QAAL,CAAe,GAAET,SAAU,oBAA3B,EAAgDU,IAAhD,CAAsD,sBAAhF,EAAuG,MAAOC,IAAP,IAAgB;AAErH,UAAIT,QAAQ,GAAG,MAAMJ,mBAASsB,sBAAT,CAAgCV,IAAhC,CAArB;AACA,UAAI;AAAEE,QAAAA,WAAF;AAAeC,QAAAA;AAAf,UAA4B,MAAMX,QAAQ,CAACY,OAAT,EAAtC;AAEAH,MAAAA,IAAI,CAACY,GAAL,CAASX,WAAT,EAAsBC,QAAtB;AAED,KAPD;AASD,GAhBA;AAkBF;;AAEDhB,IAAI","sourcesContent":["import Path from 'path'\nimport _Test from 'ava'\n\nimport { Scenario } from './scenario.js'\n\nasync function main() {\n\n  (await Scenario.createScenarioFromFolder(`${__dirname}/resource/scenario`)).forEach((scenario) => {\n\n    let Test = scenario.modifier.reduce((__Test, modifier) => __Test[modifier], _Test)\n\n    Test(`getHTML() using '${Path.relative(`${__dirname}/resource/scenario`, scenario.path)}'`, async (test) => {\n\n      let { virtualHTML, realHTML } = await scenario.getHTML()\n\n      if (virtualHTML !== realHTML) {\n\n        test.log('-'.repeat(80))\n        test.log('realHTML')\n        test.log('-'.repeat(80))\n        test.log(realHTML)\n\n        test.log('-'.repeat(80))\n        test.log('virtualHTML')\n        test.log('-'.repeat(80))\n        test.log(virtualHTML)\n        test.log('-'.repeat(80))\n\n      }\n\n      test.is(virtualHTML, realHTML)\n\n    })\n\n  })\n\n  ;[ \n    require.resolve('./resource/scenario/text/01-literal-html.skip.pug')\n  ].forEach((path) => {\n\n    _Test(`getHTML() using '${Path.relative(`${__dirname}/resource/scenario`, path)}' throws TypeError`, async (test) => {\n      let scenario = await Scenario.createScenarioFromFile(path)\n      await test.throwsAsync(scenario.getHTML(), { 'instanceOf': TypeError })\n    })\n\n  })\n\n  ;[ \n    require.resolve('./resource/scenario/attribute/03-multiline-attribute.skip.pug'),\n    require.resolve('./resource/scenario/comment/04-conditional-comment.skip.pug'),\n    require.resolve('./resource/scenario/filter/02-nested-filter.skip.pug'),\n    require.resolve('./resource/scenario/include/02-filtered-text.skip.pug')\n  ].forEach((path) => {\n\n    _Test(`getHTML() using '${Path.relative(`${__dirname}/resource/scenario`, path)}' does not match Pug`, async (test) => {\n\n      let scenario = await Scenario.createScenarioFromFile(path)\n      let { virtualHTML, realHTML } = await scenario.getHTML()\n\n      test.not(virtualHTML, realHTML)\n\n    })\n\n  })\n\n}\n\nmain()\n"],"file":"scenario.test.js"}