{"version":3,"sources":["../../../source/test/library/transform-create-module-from-path.test.js"],"names":["Bundler","FileSystem","Path","Browser","Server","Test","Transform","FilePath","_URL","fileURLToPath","import","meta","url","FolderPath","dirname","Require","_createRequire","before","test","sourcePath","targetPath","resolve","extname","createModuleFromPath","move","bundle","host","port","start","context","browser","launch","page","newPage","goto","element","$$","item","Promise","all","map","evaluate","node","dataset","deepEqual","close","after","always","shutdown"],"mappings":"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","sourcesContent":["import Bundler from 'parcel-bundler'\nimport FileSystem from 'fs-extra'\nimport Path from 'path'\nimport Browser from 'puppeteer'\nimport Server from 'live-server'\nimport Test from 'ava'\n\nimport { Transform } from '../../index.js'\n\nconst FilePath = __filePath\nconst FolderPath = Path.dirname(FilePath)\nconst Require = __require\n\nTest.before(async (test) => {\n  \n  let sourcePath = null\n  let targetPath = null\n\n  sourcePath = Require.resolve('./www/script/element.pug')\n  targetPath = `${sourcePath}${Path.extname(FilePath)}`\n\n  await Transform.createModuleFromPath(sourcePath, targetPath)\n\n  ;[ sourcePath, targetPath ] = [ targetPath, `${sourcePath}.js` ]\n\n  if (sourcePath !== targetPath) {\n    await FileSystem.move(sourcePath, targetPath)\n  }\n\n  await (new Bundler(Require.resolve('./www/index.html'), {\n    'cache': false,\n    'logLevel': 2,\n    'minify': false,\n    'outDir': `${FolderPath}/www-bundle`,\n    'target': 'browser',\n    'watch': false\n  })).bundle()\n\n  let host = '0.0.0.0'\n  let port = Path.extname(FilePath) === '.cjs' ? 8080 : 8081\n\n  Server.start({\n    'host': host,\n    'port': port,\n    'logLevel': 0,\n    'mount': [\n      [ '/', `${FolderPath}/www-bundle` ],\n      [ '/favicon.ico', `${FolderPath}/www/resource/application.ico` ]\n    ],\n    'open': false\n  })\n\n  test.context.url = `http://${host}:${port}/index.html`\n\n})\n\nTest('page.$$(\\'li.element\\')', async (test) => {\n\n  let browser = await Browser.launch()\n\n  try {\n  \n    let page = await browser.newPage()\n    await page.goto(test.context.url)\n    \n    // await page.screenshot({path: 'example.png'})\n\n    let element = await page.$$('li.element')\n    let item = await Promise.all(element.map((element) => element.evaluate((node) => node.dataset.item)))\n\n    test.deepEqual(item, [ 'a', 'ab', 'bb', 'cb', 'c' ])\n     \n  } finally {\n    await browser.close()\n  }\n\n})\n\nTest.after.always(() => {\n  Server.shutdown()\n})\n"],"file":"transform-create-module-from-path.test.js"}