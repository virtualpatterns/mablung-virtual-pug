{"version":3,"sources":["../../../source/test/library/scenario.test.js"],"names":["Path","_Test","Scenario","FilePath","_URL","fileURLToPath","import","meta","url","FolderPath","dirname","Require","_createRequire","main","createScenarioFromFolder","forEach","scenario","Test","modifier","reduce","__Test","relative","path","test","virtualHTML","realHTML","getHTML","log","repeat","is","resolve","createScenarioFromFile","throwsAsync","TypeError","not"],"mappings":"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","sourcesContent":["import Path from 'path'\nimport _Test from 'ava'\n\nimport { Scenario } from './scenario.js'\n\nconst FilePath = __filePath\nconst FolderPath = Path.dirname(FilePath)\nconst Require = __require\n\nasync function main() {\n\n  (await Scenario.createScenarioFromFolder(`${FolderPath}/resource/scenario`)).forEach((scenario) => {\n\n    let Test = scenario.modifier.reduce((__Test, modifier) => __Test[modifier], _Test)\n\n    Test(`getHTML() using '${Path.relative(`${FolderPath}/resource/scenario`, scenario.path)}'`, async (test) => {\n\n      let { virtualHTML, realHTML } = await scenario.getHTML()\n\n      if (virtualHTML !== realHTML) {\n\n        test.log('-'.repeat(80))\n        test.log('realHTML')\n        test.log('-'.repeat(80))\n        test.log(realHTML)\n\n        test.log('-'.repeat(80))\n        test.log('virtualHTML')\n        test.log('-'.repeat(80))\n        test.log(virtualHTML)\n        test.log('-'.repeat(80))\n\n      }\n\n      test.is(virtualHTML, realHTML)\n\n    })\n\n  })\n\n  ;[ \n    Require.resolve('./resource/scenario/text/01-literal-html.skip.pug')\n  ].forEach((path) => {\n\n    _Test(`getHTML() using '${Path.relative(`${FolderPath}/resource/scenario`, path)}' throws TypeError`, async (test) => {\n      let scenario = await Scenario.createScenarioFromFile(path)\n      await test.throwsAsync(scenario.getHTML(), { 'instanceOf': TypeError })\n    })\n\n  })\n\n  ;[ \n    Require.resolve('./resource/scenario/attribute/03-multiline-attribute.skip.pug'),\n    Require.resolve('./resource/scenario/comment/04-conditional-comment.skip.pug'),\n    Require.resolve('./resource/scenario/filter/02-nested-filter.skip.pug'),\n    Require.resolve('./resource/scenario/include/02-filtered-text.skip.pug')\n  ].forEach((path) => {\n\n    _Test(`getHTML() using '${Path.relative(`${FolderPath}/resource/scenario`, path)}' does not match Pug`, async (test) => {\n\n      let scenario = await Scenario.createScenarioFromFile(path)\n      let { virtualHTML, realHTML } = await scenario.getHTML()\n\n      test.not(virtualHTML, realHTML)\n\n    })\n\n  })\n\n}\n\nmain()\n"],"file":"scenario.test.js"}