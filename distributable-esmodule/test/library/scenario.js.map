{"version":3,"sources":["../../../source/test/library/scenario.js"],"names":["FileSystem","Format","Is","Match","Path","Pug","CreateRealNode","Transform","FilePath","_URL","fileURLToPath","import","meta","url","Scenario","constructor","path","local","_path","_local","modifierPattern","modifier","match","not","null","exec","push","lastIndex","_modifier","getHTML","realHTML","compileFile","sourcePath","targetPath","extname","createModuleFromPath","module","_URL2","pathToFileURL","virtualFn","default","virtualNode","virtualHTML","map","toString","join","createScenarioFromFolder","includePattern","excludePattern","item","readdir","createScenario","concat","filter","isDirectory","folder","name","isFile","file","reduce","isMatch","pattern","createScenarioFromFile","scenario","Promise","all","flat","localPath","pathExists"],"mappings":"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","sourcesContent":["import FileSystem from 'fs-extra'\nimport Format from 'pretty'\nimport Is from '@pwn/is'\nimport Match from 'minimatch'\nimport Path from 'path'\nimport Pug from 'pug'\n\nimport CreateRealNode from 'virtual-dom/create-element.js'\n\nimport { Transform } from '../../index.js'\n\nconst FilePath = __filePath\n\nclass Scenario {\n\n  constructor(path, local = {}) {\n\n    this._path = path\n    this._local = local\n\n    let modifierPattern = /\\.(.*?)\\./g\n    let modifier = []\n\n    let match = null\n\n    while (Is.not.null(match = modifierPattern.exec(path))) {\n      modifier.push(match[1])\n      modifierPattern.lastIndex --\n    }\n\n    this._modifier = modifier\n\n  }\n\n  get path() {\n    return this._path\n  }\n\n  get local() {\n    return this._local\n  }\n\n  get modifier() {\n    return this._modifier\n  }\n\n  async getHTML() {\n\n    let realHTML = null\n    realHTML = Pug.compileFile(this._path)(this._local)\n    realHTML = Format(realHTML)\n\n    let sourcePath = this._path\n    let targetPath = `${sourcePath}${Path.extname(FilePath)}`\n\n    await Transform.createModuleFromPath(sourcePath, targetPath)\n\n    // __transformPath does ...\n    //   URL.pathToFileURL if the environment is ESModule\n    //   require.resolve if the environment is CommonJS\n    let module = await import(__transformPath(targetPath))\n    let virtualFn = module.default\n    let virtualNode = virtualFn(this._local)\n\n    let virtualHTML = null\n    virtualHTML = virtualNode.map((virtualNode) => CreateRealNode(virtualNode).toString()) \n    virtualHTML = virtualHTML.join('')\n    virtualHTML = Format(virtualHTML)\n\n    return {\n      realHTML,\n      virtualHTML\n    }\n  }\n\n  static async createScenarioFromFolder(path, includePattern = [ '*.pug' ], excludePattern = [ '*.skip.pug' ]) {\n  \n    let item = await FileSystem.readdir(path, { 'encoding': 'utf-8', 'withFileTypes': true })\n  \n    let createScenario = []\n\n    createScenario = createScenario.concat(item\n      .filter((item) => item.isDirectory())\n      .map((folder) => this.createScenarioFromFolder(`${path}/${folder.name}`, includePattern, excludePattern)))\n\n    createScenario = createScenario.concat(item\n      .filter((item) => item.isFile())\n      .filter((file) => includePattern.reduce((isMatch, pattern) => isMatch ? isMatch : Match(file.name, pattern), false))\n      .filter((file) => !excludePattern.reduce((isMatch, pattern) => isMatch ? isMatch : Match(file.name, pattern), false))\n      .map((file) => this.createScenarioFromFile(`${path}/${file.name}`)))\n\n    let scenario = await Promise.all(createScenario)\n  \n    return scenario.flat()\n  \n  }\n  \n  static async createScenarioFromFile(path) {\n  \n    let localPath = `${path}.js`\n    let local = {}\n  \n    if (await FileSystem.pathExists(localPath)) {\n  \n      let module = null\n      module = await import(localPath)\n      module = module.default || module\n  \n      local = module\n  \n    }\n  \n    return new Scenario(path, local)\n  \n  }\n  \n}\n\nexport { Scenario }"],"file":"scenario.js"}