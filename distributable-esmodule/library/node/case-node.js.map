{"version":3,"sources":["../../../source/library/node/case-node.js"],"names":["BlockWhenNode","Node","CaseNode","constructor","node","option","getSource","blockWhenNode","_node","block","_option","blockWhenSource","isEmpty","expr"],"mappings":";AACA,OAAOA,aAAP,MAA0B,sBAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,QAAN,SAAuBD,IAAvB,CAA4B;;AAE1BE,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAe;AACxB,UAAMD,IAAN,EAAYC,MAAZ;AACD;;AAED,QAAMC,SAAN,GAAkB;;AAEhB,QAAIC,aAAa,GAAG,IAAIP,aAAJ,CAAkB,KAAKQ,KAAL,CAAWC,KAA7B,EAAoC,KAAKC,OAAzC,CAApB;;AAEA,QAAIC,eAAe,GAAG,IAAtB;AACAA,IAAAA,eAAe,GAAG,MAAMJ,aAAa,CAACD,SAAd,EAAxB;AACAK,IAAAA,eAAe,GAAGJ,aAAa,CAACK,OAAd;AAChB,SADgB;AAEf;AACP,YAAYD,eAAgB;AAC5B,UAJI;;AAMA,WAAS,WAAU,KAAKH,KAAL,CAAWK,IAAK,KAAIF,eAAgB,EAAvD;;AAED,GApByB;;;;AAwB5B,eAAeT,QAAf","sourcesContent":["\nimport BlockWhenNode from './block-when-node.js'\nimport Node from '../node.js'\n\nclass CaseNode extends Node {\n\n  constructor(node, option) {\n    super(node, option)\n  }\n\n  async getSource() {\n\n    let blockWhenNode = new BlockWhenNode(this._node.block, this._option)\n\n    let blockWhenSource = null\n    blockWhenSource = await blockWhenNode.getSource()\n    blockWhenSource = blockWhenNode.isEmpty ? \n      ' {}' : \n      ` { \n          ${blockWhenSource}\n        }`\n\n    return  ` switch(${this._node.expr}) ${blockWhenSource}`\n\n  }\n\n}\n\nexport default CaseNode"],"file":"case-node.js"}