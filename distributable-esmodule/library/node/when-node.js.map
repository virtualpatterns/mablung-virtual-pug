{"version":3,"sources":["../../../source/library/node/when-node.js"],"names":["BlockNode","Node","WhenNode","constructor","node","option","getSource","_node","block","blockNode","_option","blockSource","isEmpty","expr","nodes","length","type","toUpperCase","val"],"mappings":";AACA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,QAAN,SAAuBD,IAAvB,CAA4B;;AAE1BE,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAe;AACxB,UAAMD,IAAN,EAAYC,MAAZ;AACD;;AAED,QAAMC,SAAN,GAAkB;;AAEhB,QAAI,KAAKC,KAAL,CAAWC,KAAf,EAAsB;;AAEpB,UAAIC,SAAS,GAAG,IAAIT,SAAJ,CAAc,KAAKO,KAAL,CAAWC,KAAzB,EAAgC,KAAKE,OAArC,CAAhB;AACA,UAAIC,WAAW,GAAGF,SAAS,CAACG,OAAV,GAAoB,EAApB,GAAyB,MAAMH,SAAS,CAACH,SAAV,EAAjD;;AAEA,UAAI,KAAKC,KAAL,CAAWM,IAAX,KAAoB,SAAxB,EAAmC;AACjC,eAAS;AACjB,sBAAsBF,WAAY,EAD1B;AAED,OAHD,MAGO;;AAEL,YAAI,KAAKJ,KAAL,CAAWC,KAAX,CAAiBM,KAAjB,CAAuBC,MAAvB,KAAkC,CAAlC;AACA,aAAKR,KAAL,CAAWC,KAAX,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BE,IAA1B,CAA+BC,WAA/B,OAAiD,MADjD;AAEA,aAAKV,KAAL,CAAWC,KAAX,CAAiBM,KAAjB,CAAuB,CAAvB,EAA0BI,GAA1B,KAAkC,OAFtC,EAE+C;AAC7C,iBAAS,SAAQ,KAAKX,KAAL,CAAWM,IAAK;AAC3C,4BADU;AAED,SALD,MAKO;AACL,iBAAS,SAAQ,KAAKN,KAAL,CAAWM,IAAK;AAC3C,wBAAwBF,WAAY;AACpC,4BAFU;AAGD;;;AAGF;;AAEF,KAxBD,MAwBO;AACL,aAAQ,QAAO,KAAKJ,KAAL,CAAWM,IAAK,GAA/B;AACD;;AAEF,GApCyB;;;;AAwC5B,eAAeX,QAAf","sourcesContent":["\nimport BlockNode from './block-node.js'\nimport Node from '../node.js'\n\nclass WhenNode extends Node {\n\n  constructor(node, option) {\n    super(node, option)\n  }\n\n  async getSource() {\n\n    if (this._node.block) {\n\n      let blockNode = new BlockNode(this._node.block, this._option)\n      let blockSource = blockNode.isEmpty ? '' : await blockNode.getSource()\n  \n      if (this._node.expr === 'default') {\n        return  ` default: \n                    ${blockSource}`\n      } else {\n\n        if (this._node.block.nodes.length === 1 &&\n            this._node.block.nodes[0].type.toUpperCase() === 'CODE' &&\n            this._node.block.nodes[0].val === 'break') {\n          return  ` case ${this._node.expr}: \n                      break`\n        } else {\n          return  ` case ${this._node.expr}: \n                      ${blockSource}\n                      break`\n        }\n\n\n      }\n  \n    } else {\n      return `case ${this._node.expr}:`\n    }\n\n  }\n\n}\n\nexport default WhenNode"],"file":"when-node.js"}