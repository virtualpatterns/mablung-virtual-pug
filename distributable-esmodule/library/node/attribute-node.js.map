{"version":3,"sources":["../../../source/library/node/attribute-node.js"],"names":["Node","UnsupportedAttributeTransformError","AttributeNode","constructor","attribute","option","_attribute","getSource","mustEscape","name","val"],"mappings":";AACA,OAAOA,IAAP,MAAiB,YAAjB;;AAEA,SAASC,kCAAT,QAAmD,mDAAnD;;AAEA,MAAMC,aAAN,SAA4BF,IAA5B,CAAiC;;AAE/BG,EAAAA,WAAW,CAACC,SAAD,EAAYC,MAAZ,EAAoB;AAC7B,UAAMD,SAAN,EAAiBC,MAAjB;AACA,SAAKC,UAAL,GAAkBF,SAAlB;AACD;;AAEDG,EAAAA,SAAS,GAAG;;AAEV,QAAI,KAAKD,UAAL,CAAgBE,UAApB,EAAgC;AAC9B,YAAM,IAAIP,kCAAJ,CAAuC,KAAKK,UAA5C,CAAN;AACD,KAFD,MAEO;AACL,aAAQ,2BAA0B,KAAKA,UAAL,CAAgBG,IAAK,MAAK,KAAKH,UAAL,CAAgBI,GAAI,oBAAhF;AACD;;AAEF,GAf8B;;;;AAmBjC,eAAeR,aAAf","sourcesContent":["\nimport Node from '../node.js'\n\nimport { UnsupportedAttributeTransformError } from '../error/unsupported-attribute-transform-error.js'\n\nclass AttributeNode extends Node {\n\n  constructor(attribute, option) {\n    super(attribute, option)\n    this._attribute = attribute\n  }\n\n  getSource() {\n\n    if (this._attribute.mustEscape) {\n      throw new UnsupportedAttributeTransformError(this._attribute)\n    } else {\n      return `__utility.addAttribute('${this._attribute.name}', ${this._attribute.val}, __attributeNode)`\n    }\n\n  }\n\n}\n\nexport default AttributeNode"],"file":"attribute-node.js"}