{"version":3,"sources":["../../../source/library/node/attribute-node.js"],"names":["Node","UnsupportedAttributeTransformError","AttributeNode","constructor","attribute","option","_attribute","getSource","mustEscape","name","val","__addAttribute","value","attributeNode","__getAttributeValue","undefined","currentValue","Array","isArray","join","toUpperCase","Object","keys","filter","key","map"],"mappings":";AACA,OAAOA,IAAP,MAAiB,YAAjB;;AAEA,SAASC,kCAAT,QAAmD,mDAAnD;;AAEA,MAAMC,aAAN,SAA4BF,IAA5B,CAAiC;;AAE/BG,EAAAA,WAAW,CAACC,SAAD,EAAYC,MAAZ,EAAoB;AAC7B,UAAMD,SAAN,EAAiBC,MAAjB;AACA,SAAKC,UAAL,GAAkBF,SAAlB;AACD;;AAEDG,EAAAA,SAAS,GAAG;;AAEV,QAAI,KAAKD,UAAL,CAAgBE,UAApB,EAAgC;AAC9B,YAAM,IAAIP,kCAAJ,CAAuC,KAAKK,UAA5C,CAAN;AACD,KAFD,MAEO;AACL,aAAQ,mBAAkB,KAAKA,UAAL,CAAgBG,IAAK,MAAK,KAAKH,UAAL,CAAgBI,GAAI,oBAAxE;AACD;;AAEF;;AAED;AACA,SAAOC,cAAP,CAAsBF,IAAtB,EAA4BG,KAA5B,EAAmCC,aAAnC,EAAkD;;AAEhD,QAAI,OAAOD,KAAP,KAAiB,SAAjB;AACAA,IAAAA,KAAK,KAAK,KADd,EACqB;AACnB;AACD,KAHD,MAGO;;AAEL,UAAI,CAACA,KAAK,GAAGE,mBAAmB,CAACL,IAAD,EAAOG,KAAP,EAAcC,aAAa,CAACJ,IAAD,CAA3B,CAA5B,MAAoEM,SAAxE,EAAmF,CAAE;AACnF;AACAF,QAAAA,aAAa,CAACJ,IAAD,CAAb,GAAsBG,KAAtB,CAFiF,CAErD;AAC7B;;AAEF;;AAEF;;AAED;AACA,SAAOE,mBAAP,CAA2BL,IAA3B,EAAiCG,KAAjC,EAAwCI,YAAxC,EAAsD;;AAEpD,QAAI,OAAOJ,KAAP,KAAiB,SAArB,EAAgC;AAC9BA,MAAAA,KAAK,GAAGA,KAAK,GAAGH,IAAH,GAAU,KAAvB;AACD,KAFD,MAEO,IAAI,OAAOG,KAAP,KAAiB,QAArB,EAA+B;AACpCA,MAAAA,KAAK,GAAGI,YAAY,GAAI,GAAEA,YAAa,IAAGJ,KAAM,EAA5B,GAAgCA,KAApD;AACD,KAFM,MAEA,IAAIK,KAAK,CAACC,OAAN,CAAcN,KAAd,CAAJ,EAA0B;AAC/BA,MAAAA,KAAK,GAAGI,YAAY,GAAI,GAAEA,YAAa,IAAGJ,KAAK,CAACO,IAAN,CAAW,GAAX,CAAgB,EAAtC,GAA0CP,KAAK,CAACO,IAAN,CAAW,GAAX,CAA9D;AACD,KAFM,MAEA;;AAEL,cAAQV,IAAI,CAACW,WAAL,EAAR;AACE,aAAK,OAAL;AACER,UAAAA,KAAK,GAAGS,MAAM,CAACC,IAAP,CAAYV,KAAZ;AACLW,UAAAA,MADK,CACGC,GAAD,IAASZ,KAAK,CAACY,GAAD,CADhB;AAELL,UAAAA,IAFK,CAEA,GAFA,CAAR;AAGA;AACF,aAAK,OAAL;AACEP,UAAAA,KAAK,GAAGS,MAAM,CAACC,IAAP,CAAYV,KAAZ;AACLa,UAAAA,GADK,CACAD,GAAD,IAAU,GAAEA,GAAI,IAAGZ,KAAK,CAACY,GAAD,CAAM,GAD7B;AAELL,UAAAA,IAFK,CAEA,EAFA,CAAR;AAGA,gBAVJ;;;AAaD;;AAED,WAAOP,KAAK,KAAK,EAAV,GAAeG,SAAf,GAA2BH,KAAlC;;AAED,GA9D8B;;;;AAkEjC,eAAeV,aAAf","sourcesContent":["\nimport Node from '../node.js'\n\nimport { UnsupportedAttributeTransformError } from '../error/unsupported-attribute-transform-error.js'\n\nclass AttributeNode extends Node {\n\n  constructor(attribute, option) {\n    super(attribute, option)\n    this._attribute = attribute\n  }\n\n  getSource() {\n\n    if (this._attribute.mustEscape) {\n      throw new UnsupportedAttributeTransformError(this._attribute)\n    } else {\n      return `__addAttribute('${this._attribute.name}', ${this._attribute.val}, __attributeNode)`\n    }\n\n  }\n\n  /* c8 ignore next 15 */\n  static __addAttribute(name, value, attributeNode) {\n\n    if (typeof value === 'boolean' &&\n        value === false) {\n      // do nothing\n    } else {\n\n      if ((value = __getAttributeValue(name, value, attributeNode[name])) !== undefined) { // eslint-disable-line no-undef\n        // attribute values are always not escaped and then escaped by the virtualization process\n        attributeNode[name] = value // eslint-disable-line no-undef\n      }\n\n    }\n\n  }\n\n  /* c8 ignore next 28 */\n  static __getAttributeValue(name, value, currentValue) {\n\n    if (typeof value === 'boolean') {\n      value = value ? name : false\n    } else if (typeof value === 'string') {\n      value = currentValue ? `${currentValue} ${value}` : value\n    } else if (Array.isArray(value)) {\n      value = currentValue ? `${currentValue} ${value.join(' ')}` : value.join(' ')\n    } else {\n\n      switch (name.toUpperCase()) {\n        case 'CLASS':\n          value = Object.keys(value)\n            .filter((key) => value[key])\n            .join(' ')\n          break\n        case 'STYLE':\n          value = Object.keys(value)\n            .map((key) => `${key}:${value[key]};`)\n            .join('')\n          break\n      }\n\n    }\n\n    return value === '' ? undefined : value\n\n  }\n\n}\n\nexport default AttributeNode"],"file":"attribute-node.js"}