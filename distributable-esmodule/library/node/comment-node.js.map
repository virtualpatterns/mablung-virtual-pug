{"version":3,"sources":["../../../source/library/node/comment-node.js"],"names":["Node","UnsupportedCommentTransformError","CommentNode","constructor","node","option","getSource","_node","buffer","val"],"mappings":";AACA,OAAOA,IAAP,MAAiB,YAAjB;;AAEA,SAASC,gCAAT,QAAiD,iDAAjD;;AAEA,MAAMC,WAAN,SAA0BF,IAA1B,CAA+B;;AAE7BG,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAe;AACxB,UAAMD,IAAN,EAAYC,MAAZ;AACD;;AAEDC,EAAAA,SAAS,GAAG;;AAEV,QAAI,KAAKC,KAAL,CAAWC,MAAf,EAAuB;AACrB;AACA,YAAM,IAAIP,gCAAJ,CAAqC,KAAKM,KAA1C,CAAN;AACD,KAHD,MAGO;AACL;AACA,aAAQ,KAAI,KAAKA,KAAL,CAAWE,GAAI,EAA3B;AACD;;AAEF,GAhB4B;;;;AAoB/B,eAAeP,WAAf","sourcesContent":["\nimport Node from '../node.js'\n\nimport { UnsupportedCommentTransformError } from '../error/unsupported-comment-transform-error.js'\n\nclass CommentNode extends Node {\n\n  constructor(node, option) {\n    super(node, option)\n  }\n\n  getSource() {\n\n    if (this._node.buffer) {\n      // comment appears in html\n      throw new UnsupportedCommentTransformError(this._node)\n    } else {\n      // comment appears in javascript\n      return `//${this._node.val}`\n    }\n\n  }\n\n}\n\nexport default CommentNode"],"file":"comment-node.js"}