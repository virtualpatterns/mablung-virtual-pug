{"version":3,"sources":["../../../source/library/node/conditional-node.js"],"names":["BlockNode","Node","ConditionalNode","constructor","node","option","getSource","source","blockNode","_node","consequent","_option","blockSource","isEmpty","test","alternate","alternateNode","createNode","alternateSource"],"mappings":";AACA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,eAAN,SAA8BD,IAA9B,CAAmC;;AAEjCE,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAe;AACxB,UAAMD,IAAN,EAAYC,MAAZ;AACD;;AAED,QAAMC,SAAN,GAAkB;;AAEhB,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAIC,SAAS,GAAG,IAAIR,SAAJ,CAAc,KAAKS,KAAL,CAAWC,UAAzB,EAAqC,KAAKC,OAA1C,CAAhB;AACA,QAAIC,WAAW,GAAGJ,SAAS,CAACK,OAAV,GAAoB,EAApB,GAAyB,MAAML,SAAS,CAACF,SAAV,EAAjD;;AAEAC,IAAAA,MAAM,GAAK,QAAO,KAAKE,KAAL,CAAWK,IAAK;AACtC,oBAAoBF,WAAY;AAChC,kBAFI;;AAIA,QAAI,KAAKH,KAAL,CAAWM,SAAf,EAA0B;;AAExB,UAAIC,aAAa,GAAG,MAAMf,IAAI,CAACgB,UAAL,CAAgB,KAAKR,KAAL,CAAWM,SAA3B,EAAsC,KAAKJ,OAA3C,CAA1B;AACA,UAAIO,eAAe,GAAG,MAAMF,aAAa,CAACV,SAAd,EAA5B;;AAEAC,MAAAA,MAAM,GAAK,IAAGA,MAAO;AAC3B,sBAAsBW,eAAgB;AACtC,oBAFM;;AAID;;AAED,WAAOX,MAAP;;AAED,GA9BgC;;;;AAkCnC,eAAeL,eAAf","sourcesContent":["\nimport BlockNode from './block-node.js'\nimport Node from '../node.js'\n\nclass ConditionalNode extends Node {\n\n  constructor(node, option) {\n    super(node, option)\n  }\n\n  async getSource() {\n\n    let source = null\n\n    let blockNode = new BlockNode(this._node.consequent, this._option)\n    let blockSource = blockNode.isEmpty ? '' : await blockNode.getSource()\n\n    source =  ` if (${this._node.test}) {\n                  ${blockSource}\n                }`\n\n    if (this._node.alternate) {\n\n      let alternateNode = await Node.createNode(this._node.alternate, this._option)\n      let alternateSource = await alternateNode.getSource()\n\n      source =  ` ${source} else {\n                    ${alternateSource} \n                  }`\n\n    }\n\n    return source\n  \n  }\n\n}\n\nexport default ConditionalNode\n"],"file":"conditional-node.js"}